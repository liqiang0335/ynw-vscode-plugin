{
  "⭕️ BEGIN": {
    "prefix": "hh-userData",
    "body": [
      "${CLIPBOARD}.userData.name = '${CLIPBOARD}';",
      "// BEGIN:${CLIPBOARD}",
      "// END:${CLIPBOARD}"
    ]
  },
  "⭕️ 渲染结构": {
    "prefix": "hh-base",
    "body": [
      "import * as T from 'three';",
      "import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';",
      "",
      "let camera, renderer, scene;",
      "",
      "main();",
      "export default async function main() {",
      "  init();",
      "  addMesh();",
      "  addLights();",
      "  animate();",
      "}",
      "",
      "function init() {",
      "  scene = new T.Scene();",
      "",
      "  camera = new T.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 100);",
      "  camera.position.set(20, 20, 20);",
      "  scene.add(camera);",
      "  camera.userData.name = 'camera';",
      "  // BEGIN:camera",
      "  // END:camera",
      "",
      "  renderer = new T.WebGLRenderer({ antialias: true });",
      "  renderer.setSize(window.innerWidth, window.innerHeight);",
      "  renderer.setClearColor(0x313131);",
      "  document.body.appendChild(renderer.domElement);",
      "  // BEGIN:renderer",
      "  // END:renderer",
      "",
      "  const controls = new OrbitControls(camera, renderer.domElement);",
      "  controls.minDistance = 5;",
      "  controls.maxDistance = 100;",
      "",
      "  yy.init({ scene, camera, renderer, appName: 'demo' });",
      "}",
      "",
      "function addMesh() {",
      "  //...",
      "}",
      "",
      "function addLights() {",
      "  let ambientLight = new T.AmbientLight();",
      "  scene.add(ambientLight);",
      "  ambientLight.userData.name = 'ambientLight';",
      "  // BEGIN:ambientLight",
      "  // END:ambientLight",
      "",
      "  const dirLight = new T.DirectionalLight();",
      "  scene.add(dirLight);",
      "  dirLight.userData.name = 'dirLight';",
      "  // BEGIN:dirLight",
      "  // END:dirLight",
      "",
      "  const pointLight = new T.PointLight();",
      "  scene.add(pointLight);",
      "  pointLight.userData.name = 'pointLight';",
      "  // BEGIN:pointLight",
      "  // END:pointLight",
      "",
      "  const spotLight = new T.SpotLight();",
      "  scene.add(pointLight);",
      "  spotLight.userData.name = 'spotLight';",
      "  // BEGIN:spotLight",
      "  // END:spotLight",
      "}",
      "",
      "function animate() {",
      "  requestAnimationFrame(animate);",
      "  renderer.render(scene, camera);",
      "}"
    ]
  },
  "⭕️ datgui": {
    "prefix": "hh-datgui",
    "body": [
      "import * as dat from 'dat.gui';",
      "const gui = new dat.GUI();"
    ]
  },
  "⭕️ jsm-libs-tween": {
    "prefix": "hh-jsm-libs-tween",
    "body": [
      "import { TWEEN } from 'three/examples/jsm/libs/tween.module.min.js';"
    ]
  },
  "⭕️ jsm-libs-stats": {
    "prefix": "hh-jsm-libs-stats",
    "body": [
      "import Stats from 'three/examples/jsm/libs/stats.module.js'"
    ]
  },
  "⭕️ jsm-controls-TrackballControls": {
    "prefix": "hh-jsm-controls-TrackballControls",
    "body": [
      "import { TrackballControls } from 'three/examples/jsm/controls/TrackballControls.js';"
    ]
  },
  "⭕️ jsm-lights-LightProbeGenerator": {
    "prefix": "hh-jsm-lights-LightProbeGenerator",
    "body": [
      "import { LightProbeGenerator } from 'three/examples/jsm/lights/LightProbeGenerator.js';"
    ]
  },
  "⭕️ jsm-lights-RectAreaLightUniformsLib": {
    "prefix": "hh-jsm-lights-RectAreaLightUniformsLib",
    "body": [
      "import { RectAreaLightUniformsLib } from 'three/examples/jsm/lights/RectAreaLightUniformsLib.js';",
      "RectAreaLightUniformsLib.init();"
    ]
  },
  "⭕️ 控制器-OrbitControls": {
    "prefix": "hh-jsm-controls-OrbitControls",
    "body": [
      "import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';"
    ]
  },
  "⭕️ 加载器-GLTFLoader": {
    "prefix": "hh-jsm-loader-GLTFLoader",
    "body": [
      "import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';"
    ]
  },
  "⭕️ 加载器-OBJLoader": {
    "prefix": "hh-jsm-loader-OBJLoader",
    "body": [
      "import { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';"
    ]
  },
  "⭕️ 加载器-MTLLoader": {
    "prefix": "hh-jsm-loader-MTLLoader",
    "body": [
      "import { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader.js';"
    ]
  },
  "⭕️ 加载器-SVGLoader": {
    "prefix": "hh-jsm-loader-SVGLoader",
    "body": [
      "import { SVGLoader } from 'three/examples/jsm/loaders/SVGLoader.js';"
    ]
  },
  "⭕️ 导入THREE import * as T": {
    "prefix": "hh-1",
    "body": [
      "import * as T from 'three';"
    ]
  },
  "⭕️ import moudle from '@three": {
    "prefix": "hh-2",
    "body": [
      "import moudle from '@three$1';"
    ]
  },
  "⭕️ import { $0 } from '@three": {
    "prefix": "hh-3",
    "body": [
      "import { $0 } from '@three$1';"
    ]
  },
  "⭕️ jsm-renderer-css2d": {
    "prefix": "hh-jsm-renderer-css2d",
    "body": [
      "import { CSS2DRenderer, CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer.js';"
    ]
  },
  "⭕️ jsm-renderer-css3d": {
    "prefix": "hh-jsm-renderer-css3d",
    "body": [
      "import { CSS3DRenderer, CSS3DObject, CSS3DSprite } from 'three/examples/jsm/renderers/CSS3DRenderer.js'"
    ]
  },
  "⭕️ jsm-renderer-SVGRenderer": {
    "prefix": "hh-jsm-renderer-SVGRenderer",
    "body": [
      "import { SVGRenderer } from 'three/examples/jsm/renderers/SVGRenderer.js'"
    ]
  },
  "⭕️ jsm-libs-gui": {
    "prefix": "hh-jsm-libs-gui",
    "body": [
      "import { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';"
    ]
  }
}