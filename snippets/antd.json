{
  "表单重置-antd": {
    "prefix": "form.resetFields",
    "body": ["form.resetFields"]
  },
  "表单设置-antd": {
    "prefix": "form.setFieldsValue",
    "body": ["form.setFieldsValue"]
  },
  "表单验证-antd": {
    "prefix": "form.validateFields",
    "body": ["form.validateFields"]
  },
  "图标-antd": {
    "prefix": "icon",
    "body": ["import { $1 } from '@ant-design/icons';"]
  },
  "导入antd": {
    "prefix": "antd",
    "body": ["import { $1 } from 'antd'"]
  },
  "通用弹窗": {
    "prefix": "iicommodal",
    "body": [
      "import React, { useEffect } from 'react';",
      "import { Modal, Form, Input, message } from 'antd';",
      "import getFormValues from '@script/getFormValues';",
      "import Rules from '@const/Rules';",
      "import http from '@script/http';",
      "const { Item, useForm } = Form;",
      "/**",
      " * ----------------------------------------",
      " *  新增",
      " * ----------------------------------------",
      " */",
      "export default function AddDialog(props) {",
      "  const { state, dispatch } = props;",
      "  const [form] = useForm();",
      "  const title = state.isEdit ? '编辑' : '添加';",
      "",
      "  const closeDialog = () => {",
      "    form.resetFields();",
      "    dispatch({ visible: false, isEdit: false });",
      "  };",
      "",
      "  useEffect(() => {",
      "    if (state.isEdit) {",
      "      form.setFieldsValue(state.editData);",
      "    }",
      "  }, [state.isEdit]);",
      "",
      "  const submit = () => {",
      "    getFormValues(form, async values => {",
      "      let url = '/add';",
      "      if (state.isEdit) {",
      "        values._id = state.select;",
      "        url = '/update';",
      "      }",
      "      console.log('表单数据', values);",
      "     // await http.post(url, values);",
      "      // message.success('操作成功');",
      "      // dispatch({ version: Date.now() });",
      "      // closeDialog();",
      "    });",
      "  };",
      "",
      "  return (",
      "    <Modal title={title} visible={state.visible} onCancel={closeDialog} onOk={submit}>",
      "      <Form form={form} labelCol={{ span: 6 }} wrapperCol={{ span: 14 }}>",
      "        <Item label='名称' name='name' rules={Rules.required}>",
      "          <Input />",
      "        </Item>",
      "        <Item label='描述' name='desc'>",
      "          <Input />",
      "        </Item>",
      "      </Form>",
      "    </Modal>",
      "  );",
      "}"
    ]
  },
  "通用表格": {
    "prefix": "iicomtable",
    "body": [
      "import React from 'react';",
      "import Table from '@comps/Table';",
      "import useLogic from './useLogic';",
      "import AddDialog from './AddDialog';",
      "import Actionbar from '@comps/Actionbar';",
      "import { AddButton, EditButton, DeleteButton } from '@comps/Buttons';",
      "/**",
      " * ----------------------------------------",
      " *  列表",
      " * ----------------------------------------",
      " */",
      "export default function ${1:${TM_FILENAME_BASE}}() {",
      "  const props = useLogic();",
      "  const { onClickAdd, onClickEdit, onClickDelete } = props;",
      "  const { state, dispatch } = props;",
      "",
      "  const columns = [",
      "    { title: '名称', dataIndex: 'name' },",
      "    { title: '描述', dataIndex: 'desc' },",
      "    { title: '创建时间', dataIndex: 'createTime' },",
      "  ];",
      "  return (",
      "    <div>",
      "      <AddDialog {...props} />",
      "      <Actionbar>",
      "        <AddButton onClick={onClickAdd} />",
      "        <EditButton onClick={onClickEdit} />",
      "        <DeleteButton onClick={onClickDelete} />",
      "      </Actionbar>",
      "      <Table",
      "        dataSource={state.rows}",
      "        columns={columns}",
      "        rowSelection={{",
      "          type: 'radio',",
      "          onChange(keys) {",
      "            dispatch({ select: keys[0] });",
      "          },",
      "        }}",
      "      />",
      "    </div>",
      "  );",
      "}"
    ]
  },
  "通用逻辑": {
    "prefix": "iicomlogic",
    "body": [
      "import { useReducer, useEffect } from 'react';",
      "import { message } from 'antd';",
      "import deleter from '@script/deleter';",
      "import http from '@script/http';",
      "",
      "const initState = {",
      "  rows: [],",
      "  version: 0,",
      "  visible: false,",
      "};",
      "",
      "const reducer = (state, action) => {",
      "  return { ...state, ...action };",
      "};",
      "",
      "export default function useLogic() {",
      "  const [state, dispatch] = useReducer(reducer, initState);",
      "",
      "  useEffect(() => {}, [state.version]);",
      "",
      "  const checker = async => {",
      "    if (!state.select) {",
      "      message.error('请选择');",
      "      return Promise.reject();",
      "    }",
      "    return Promise.resolve();",
      "  };",
      "",
      "  const onClickAdd = () => {",
      "    dispatch({ visible: true });",
      "  };",
      "  const onClickEdit = async () => {",
      "    await checker();",
      "    const editData = state.rows.find(item => item.pid == state.select);",
      "    dispatch({ isEdit: true, editData, visible: true });",
      "  };",
      "",
      "  const onClickDelete = async () => {",
      "    await checker();",
      "    await deleter(() => http.post('/delete', {_id:state.select}));",
      "    dispatch({ version: Date.now() });",
      "  };",
      "",
      "  return { state, dispatch, onClickAdd, onClickDelete, onClickEdit };",
      "}"
    ]
  },
  "导入Taro组件": {
    "prefix": "taro",
    "body": "import { View, Text } from '@tarojs/components'"
  },
  "导入Taro-UI": {
    "prefix": "taro",
    "body": "import { AtButton } from 'taro-ui'"
  },
  "导入TaroJS": {
    "prefix": "taro",
    "body": "import Taro from '@tarojs/taro'"
  }
}
