{
  "mongo关联查询": {
    "prefix": "⭕️ yy.mongo.lookup",
    "body": [
      "{ $lookup: { from: 'xxx', localField: '_id', foreignField: '_id', as: 'docs' } }",
      "{ $unwind: { path: '$docs', preserveNullAndEmptyArrays: true } }"
    ]
  },
  "mongo游标查询": {
    "prefix": "⭕️ yy.mongo.cursor",
    "body": [
      "const cursor = await Model.find({}).cursor();",
      "for (let doc = await cursor.next(); doc != null; doc = await cursor.next()) {",
      "   $0",
      "}"
    ]
  },
  "express增删改查": {
    "prefix": "⭕️ yy.express.api",
    "body": [
      "async function get${1:name}Items(req, res, next) {",
      "  const { page = 1 } = req.query;",
      "  ${1:name}.find()",
      "    .byPage(page)",
      "    .then(data => res.send(req.fn.ok(data)))",
      "    .catch(next);",
      "}",
      "",
      "async function add${1:name}(req, res, next) {",
      "  ${1:name}.create(req.body)",
      "    .then(data => res.send(req.fn.ok(data)))",
      "    .catch(next);",
      "}",
      "",
      "async function update${1:name}(req, res, next) {",
      "  const { _id } = req.body;",
      "  ${1:name}.updateOne({ _id }, req.body)",
      "    .then(data => res.send(req.fn.ok(data)))",
      "    .catch(next);",
      "}",
      "",
      "async function delete${1:name}(req, res, next) {",
      "  const { _id } = req.body;",
      "  ${1:name}.deleteOne({ _id })",
      "    .then(data => res.send(req.fn.ok(data)))",
      "    .catch(next);",
      "}"
    ]
  },
  "Express函数": {
    "prefix": "⭕️ yy.express.func",
    "body": [
      "async function ${TM_FILENAME}() {",
      "  $0",
      "}",
      "",
      "module.exports = ${TM_FILENAME};"
    ]
  },
  "Express 响应": {
    "prefix": "⭕️ yy.express.response",
    "body": [
      ".then(data => res.send(req.fn.ok(data)))",
      ".catch(next);"
    ]
  },
  "Express.GET": {
    "prefix": "⭕️ yy.express.get",
    "body": [
      "router.get('$1', ${2:name});",
      "",
      "async function ${2}(req, res, next) {",
      "   $0",
      "}"
    ]
  },
  "Express.POST": {
    "prefix": "⭕️ yy.express.post",
    "body": [
      "router.post('$1', ${2:name});",
      "",
      "async function ${2}(req, res, next) {",
      "   $0",
      "}"
    ]
  },
  "Express 导出路由": {
    "prefix": "⭕️ yy.express.router",
    "body": [
      "const router = require('express').Router();",
      "",
      "$0",
      "",
      "module.exports = router;"
    ]
  },
  "Express中间件-2箭头函数": {
    "prefix": "⭕️ yy.express.middleware",
    "body": [
      "const ${1:name} = (req, res, next) => {",
      "  $0",
      "  next();",
      "};"
    ]
  },
  "中间件-行内": {
    "prefix": "⭕️ yy.express.middleware",
    "body": [
      "async function $1(req, res, next) {",
      "  $0",
      "};"
    ]
  },
  "Express.捕获错误": {
    "prefix": "⭕️ yy.express.next.error",
    "body": [
      "try {",
      "  $0",
      "} catch (err) {",
      " return next(new Error(err))",
      "}"
    ]
  },
  "Express发送成功": {
    "prefix": "⭕️ yy.express.ok",
    "body": [
      "res.send(req.fn.ok($0))"
    ]
  },
  "Express发送失败": {
    "prefix": "⭕️ yy.express.fail",
    "body": [
      "res.send(req.fn.error($0))"
    ]
  }
}